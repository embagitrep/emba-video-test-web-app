$(".wizard-horizontal").steps({
    headerTag: "h6",
    bodyTag: "fieldset",
    transitionEffect: "fade",
    titleTemplate: '<span class="step">#index#</span> #title#',
    labels: {finish: "Submit"},
    onFinished: function (i, e) {
        alert("Form submitted.")
    }
}), $(".wizard-vertical").steps({
    headerTag: "h3",
    bodyTag: "fieldset",
    transitionEffect: "fade",
    enableAllSteps: !0,
    stepsOrientation: "vertical",
    labels: {finish: "Submit"},
    onFinished: function (i, e) {
        alert("Form submitted.")
    }
});
var stepsValidation = $(".wizard-validation"), form = stepsValidation.show();
stepsValidation.steps({
    headerTag: "h6",
    bodyTag: "fieldset",
    transitionEffect: "fade",
    titleTemplate: '<span class="step">#index#</span> #title#',
    labels: {finish: "Submit"},
    onStepChanging: function (i, e, n) {
        return n < e || (form.validate().settings.ignore = ":disabled,:hidden", form.valid())
    },
    onFinishing: function (i, e) {
        return form.validate().settings.ignore = ":disabled", form.valid()
    },
    onFinished: function (i, e) {
        $(this).submit()
    }
}), stepsValidation.validate({
    ignore: "input[type=hidden]",
    errorClass: "danger",
    successClass: "success",
    highlight: function (i, e) {
        $(i).removeClass(e)
    },
    unhighlight: function (i, e) {
        $(i).removeClass(e)
    },
    errorPlacement: function (i, e) {
        i.insertAfter(e)
    },
    rules: {email: {email: !0}}
}), $(document).ready(function () {
    $(".current").find(".step-icon").addClass("bx bx-time-five"), $(".current").find(".fonticon-wrap .livicon-evo").updateLiviconEvo({strokeColor: "#5A8DEE"})
}), $(".actions [href='#next']").click(function () {
    $(".done").find(".step-icon").removeClass("bx bx-time-five").addClass("bx bx-check-circle"), $(".current").find(".step-icon").removeClass("bx bx-check-circle").addClass("bx bx-time-five"), $(".current").find(".fonticon-wrap .livicon-evo").updateLiviconEvo({strokeColor: "#5A8DEE"}), $(".current").prev("li").find(".fonticon-wrap .livicon-evo").updateLiviconEvo({strokeColor: "#39DA8A"})
}), $(".actions [href='#previous']").click(function () {
    $(".current").find(".fonticon-wrap .livicon-evo").updateLiviconEvo({strokeColor: "#5A8DEE"}), $(".current").next("li").find(".fonticon-wrap .livicon-evo").updateLiviconEvo({strokeColor: "#adb5bd"})
}), $(".actions [href='#finish']").click(function () {
    $(".done").find(".step-icon").removeClass("bx-time-five").addClass("bx bx-check-circle"), $(".last.current.done").find(".fonticon-wrap .livicon-evo").updateLiviconEvo({strokeColor: "#39DA8A"})
}), $('.actions a[role="menuitem"]').addClass("btn btn-primary"), $('.icon-tab [role="menuitem"]').addClass("glow "), $('.wizard-vertical [role="menuitem"]').removeClass("btn-primary").addClass("btn-light-primary");



$('#rejim').on('change', function (e) {
    e.preventDefault();
    $regime = $(this).val();
    switch ($regime) {
        case 'idxal':
            $('#exit_bound').prop('disabled', true);
            $('#enter_bound').prop('disabled', false);
            break;
        case 'ixrac':
            $('#enter_bound').prop('disabled', true);
            $('#exit_bound').prop('disabled', false);
            break;
        case 'daxili':
            $('#enter_bound').prop('disabled', true);
            $('#exit_bound').prop('disabled', true);
            break;
        case 'tranzit':
            $('#enter_bound').prop('disabled', false);
            $('#exit_bound').prop('disabled', false);
            break;
    }
});

function getStationByCode(val,target) {
    $.ajax({
        url: '/order/getStation/'+val,
        method: 'get',
        complete: function (data) {
            if (data.responseJSON.data){
                $('#'+target).val(data.responseJSON.data)
                .prop('readonly',true)
            }
        }
    })
}

function getstationByName(val,target){
    $.ajax({
        url: '/order/getStationName/'+val,
        method: 'get',
        complete: function (data) {

            if (data.responseJSON.data){
                $('#'+target+'').prop('readonly',true)
                .val(data.responseJSON.data)
            }
        }
    })
}

function getDistance(origin,dest){
    $.ajax({
        url: '/order/getData/'+origin+'/'+dest,
        method: 'get',
        complete: function (data) {
            $res = data.responseJSON.length;

            if ($res){
                $('#distance').val($res)
            }
        }
    });
}

$('#from_station_code').change(function () {
    if ($(this).val() !== $('#to_station_code').val())
        getStationByCode($(this).val(),'from_station_name')
    else
        $(this).after('<label  class="danger">Loading and Target stations can \'t be same.</label>')
})

$('#from_station_name').change(function () {
    if ($(this).val() !== $('#to_station_name').val())
        getstationByName($(this).val(),'from_station_code')
    else
        $(this).after('<label  class="danger">Loading and Target stations can \'t be same.</label>')
})
$('#to_station_code').change(function () {
    if ($(this).val() !== $('#from_station_code').val())
        getStationByCode($(this).val(),'to_station_name')
    else
        $(this).after('<label  class="danger">Loading and Target stations can \'t be same.</label>')
})

$('#to_station_name').change(function () {
    if ($(this).val() !== $('#from_station_name').val())
        getstationByName($(this).val(),'to_station_code');
    else
        $(this).after('<label  class="danger">Loading and Target stations can \'t be same.</label>')
});

$('#enter_bound').on('change', function (e) {
    e.preventDefault()
    $origin = $(this).val();
    $dest = $('#exit_bound').val();

    if ( $dest != 0 && $origin != 0){
        getDistance($origin,$dest)
    }
})
$('#exit_bound').on('change', function (e) {
    e.preventDefault()

    $dest = $(this).val();
    $origin = $('#enter_bound').val();

    if ( $dest != 0 && $origin != 0){
        getDistance($origin,$dest)
    }
})


$options = $('#ContentPlaceHolder1_ASPxPageControl1_sel_ORD_BEGPOIN').children('option')
var arr = [];
var arr1 = [];
$.each($options, function (e,v) {
    arr.push($(this).val())
    arr1.push($(this).text())

})
